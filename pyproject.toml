[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "openaccess-mcp"
version = "0.0.1"
description = "A secure, policy-driven MCP server for remote access with SSH, SFTP, rsync, and tunneling capabilities"
readme = "README.md"
license = {text = "Apache-2.0"}
authors = [
    {name = "OpenAccess MCP Contributors", email = "team@openaccess-mcp.dev"}
]
keywords = ["mcp", "ssh", "sftp", "rsync", "remote-access", "security", "policy"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Intended Audience :: System Administrators",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: System :: Systems Administration",
    "Topic :: Security",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.12"
dependencies = [
    "mcp>=1.0.0",
    "asyncssh>=2.14.0",
    "paramiko>=3.4.0",
    "pydantic>=2.5.0",
    "pydantic-settings>=2.1.0",
    "structlog>=23.2.0",
    "opentelemetry-sdk>=1.21.0",
    "opentelemetry-exporter-otlp>=1.21.0",
    # "opentelemetry-instrumentation>=0.55.1",  # Temporarily commented out
    "hvac>=1.1.0",
    "keyring>=24.3.0",
    "pynacl>=1.5.0",
    "typer>=0.9.0",
    "rich>=13.7.0",
    "aiofiles>=23.2.0",
    "cryptography>=41.0.0",
    "prometheus-client>=0.17.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.12.0",
    "testcontainers>=3.7.0",
    "ruff>=0.1.0",
    "mypy>=1.7.0",
    "black>=23.12.0",
    "pre-commit>=3.6.0",
]
docs = [
    "mkdocs>=1.5.0",
    "mkdocs-material>=9.5.0",
    "mkdocstrings>=0.24.0",
    "mkdocstrings-python>=1.7.0",
]

[project.scripts]
openaccess-mcp = "openaccess_mcp.cli:app"
openaccess-audit = "openaccess_mcp.audit.cli:app"

[project.urls]
Homepage = "https://github.com/keepithuman/openaccess-mcp"
Documentation = "https://openaccess-mcp.dev"
Repository = "https://github.com/keepithuman/openaccess-mcp"
"Bug Tracker" = "https://github.com/keepithuman/openaccess-mcp/issues"
Changelog = "https://github.com/keepithuman/openaccess-mcp/blob/main/CHANGELOG.md"

[tool.hatch.build.targets.wheel]
packages = ["openaccess_mcp"]

[tool.ruff]
target-version = "py312"
line-length = 100
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=openaccess_mcp",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["openaccess_mcp"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]
